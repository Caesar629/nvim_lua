1b50978a251103db2e0dee235e4f3c55|file:///home/ws/.config/nvim/init.vim|153|17|V|vim
		\ 'https://github.com/theniceboy/coc-tailwindcss',
e5ac72bb2fc81e16d8017babe6dab2a9|file:///home/ws/.config/nvim/init.vim|132|1|V|vim
		\ 'coc-css',
48289d93cf481c15c71ed9068a7c0a71|file:///home/ws/.config/nvim/init.vim|118|1|V|vim
	Plug 'vim-airline/vim-airline'
	Plug 'vim-airline/vim-airline-themes'
b9caf752a313535238ce70893928332c|file:///home/ws/.config/nvim/init.vim|131|14|V|vim
		\ 'coc-clang',
5380884b057bbe975bdf7e2bb8023a25|file:///home/ws/.config/nvim/init.vim|131|1|V|vim
		\ 'coc-clangd',
d1fad6d4319cd7ffc8634e6c5ef43725|file:///home/ws/.config/nvim/init.vim|48|1|v|vim
	" Compile function
	noremap r :call CompileRunGcc()<CR>
	func! CompileRunGcc()
		exec "w"
		if &filetype == 'c'
			set splitbelow
			:sp
			:res -5
			term gcc % -o %< && time ./%<
		elseif &filetype == 'cpp'
			set splitbelow
			exec "!g++ -std=c++11 % -Wall -o %<"
			:sp
			:res -15
			:term ./%<
		elseif &filetype == 'cs'
			set splitbelow
			silent! exec "!mcs %"
			:sp
			:res -5
			:term mono %<.exe
		elseif &filetype == 'java'
			set splitbelow
			:sp
			:res -5
			term javac % && time java %<
		elseif &filetype == 'sh'
			:!time bash %
		elseif &filetype == 'python'
			set splitbelow
			:sp
			:term python3 %
		elseif &filetype == 'html'
			silent! exec "!".g:mkdp_browser." % &"
		elseif &filetype == 'markdown'
			exec "InstantMarkdownPreview"
		elseif &filetype == 'tex'
			silent! exec "VimtexStop"
			silent! exec "VimtexCompile"
		elseif &filetype == 'dart'
			exec "CocCommand flutter.run -d ".g:flutter_default_device." ".g:flutter_run_args
			silent! exec "CocCommand flutter.dev.openDevLog"
		elseif &filetype == 'javascript'
			set splitbelow
			:sp
			:term export DEBUG="INFO,ERROR,WARNING"; node --trace-warnings .
		elseif &filetype == 'racket'
			set splitbelow
			:sp
			:res -5
			term racket %
		elseif &filetype == 'go'
			set splitbelow
			:sp
			:term go run .
		endif
	endfunc
	
	
1d809c8aefc373d1bf2ebc411485a069|file:///home/ws/.config/nvim/init.vim|163|1|v|vim
	 Compile function
	noremap r :call CompileRunGcc()<CR>
	func! CompileRunGcc()
		exec "w"
		if &filetype == 'c'
			set splitbelow
			:sp
			:res -5
			term gcc % -o %< && time ./%<
		elseif &filetype == 'cpp'
			set splitbelow
			exec "!g++ -std=c++11 % -Wall -o %<"
			:sp
			:res -15
			:term ./%<
		elseif &filetype == 'cs'
			set splitbelow
			silent! exec "!mcs %"
			:sp
			:res -5
			:term mono %<.exe
		elseif &filetype == 'java'
			set splitbelow
			:sp
			:res -5
			term javac % && time java %<
		elseif &filetype == 'sh'
			:!time bash %
		elseif &filetype == 'python'
			set splitbelow
			:sp
			:term python3 %
		elseif &filetype == 'html'
			silent! exec "!".g:mkdp_browser." % &"
		elseif &filetype == 'markdown'
			exec "InstantMarkdownPreview"
		elseif &filetype == 'tex'
			silent! exec "VimtexStop"
			silent! exec "VimtexCompile"
		elseif &filetype == 'dart'
			exec "CocCommand flutter.run -d ".g:flutter_default_device." ".g:flutter_run_args
			silent! exec "CocCommand flutter.dev.openDevLog"
		elseif &filetype == 'javascript'
			set splitbelow
			:sp
			:term export DEBUG="INFO,ERROR,WARNING"; node --trace-warnings .
		elseif &filetype == 'racket'
			set splitbelow
			:sp
			:res -5
			term racket %
		elseif &filetype == 'go'
			set splitbelow
			:sp
			:term go run .
		endif
	endfunc
	
	 Compile function
	noremap r :call CompileRunGcc()<CR>
	func! CompileRunGcc()
		exec "w"
		if &filetype == 'c'
			set splitbelow
			:sp
			:res -5
			term gcc % -o %< && time ./%<
		elseif &filetype == 'cpp'
			set splitbelow
			exec "!g++ -std=c++11 % -Wall -o %<"
			:sp
			:res -15
			:term ./%<
		elseif &filetype == 'cs'
			set splitbelow
			silent! exec "!mcs %"
			:sp
			:res -5
			:term mono %<.exe
		elseif &filetype == 'java'
			set splitbelow
			:sp
			:res -5
			term javac % && time java %<
		elseif &filetype == 'sh'
			:!time bash %
		elseif &filetype == 'python'
			set splitbelow
			:sp
			:term python3 %
		elseif &filetype == 'html'
			silent! exec "!".g:mkdp_browser." % &"
		elseif &filetype == 'markdown'
			exec "InstantMarkdownPreview"
		elseif &filetype == 'tex'
			silent! exec "VimtexStop"
			silent! exec "VimtexCompile"
		elseif &filetype == 'dart'
			exec "CocCommand flutter.run -d ".g:flutter_default_device." ".g:flutter_run_args
			silent! exec "CocCommand flutter.dev.openDevLog"
		elseif &filetype == 'javascript'
			set splitbelow
			:sp
			:term export DEBUG="INFO,ERROR,WARNING"; node --trace-warnings .
		elseif &filetype == 'racket'
			set splitbelow
			:sp
			:res -5
			term racket %
		elseif &filetype == 'go'
			set splitbelow
			:sp
			:term go run .
		endif
	endfunc
	
	
5fef2d63f9ebafd456e736d56c464d61|file:///home/ws/.config/nvim/init.vim|163|29|v|vim
	>
	      \ coc#pum#visible() ? coc#pum#next(1) :
	      \ CheckBackspace() ? "\<Tab>" :
	      \ coc#refresh()
	inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "
1a24322d1549cb963e19edcc3bd94569|file:///home/ws/.config/nvim/init.vim|163|29|V|vim
	inoremap <silent><expr> <TAB\<C-h>"
088094ff498dd5b45ff64db831623d88|file:///home/ws/.config/nvim/hello.cpp|5|1|V|cpp
	  ;:wq
84b47f2414e0157b927a37994214c117|file:///home/ws/.config/nvim/init.vim|63|1|V|vim
	map <F> :NERDTreeToggle<CR>
fa1e227e02c1671f08f374516b8cbd73|file:///home/ws/.config/nvim/init.vim|63|1|V|vim
	map <F3> :NERDTreeToggle<CR>
7256e6dfe77d7cd37e4a4e8dfea34ee6|file:///home/ws/.config/nvim/init.vim|91|1|v|vim
		\ 'coc-omnisharp',
eac93a3a61248f395ad8e3e7f5470b52|file:///home/ws/hello.cpp|1|1|V|cpp
	#in:
a7067430774b67da3683389906747081|file:///home/ws/.config/nvim/init.vim|76|1|V|vim
		\ 'coc-ccls',
c58507671b55e8933476f60d1dc9db7e|file:///home/ws/.config/nvim/coc-settings.json|206|1|V|json
			"languageserver": {
c47728628ef330f2dea54fbf55fc79b3|file:///home/ws/.config/nvim/coc-settings.json|250|3|v|json
	"ccls": {
				"command": "ccls",
				"filetypes": ["c", "cpp", "cuda", "objc", "objcpp"],
				"rootPatterns": [".ccls", ".ccls-root", "compile_commands.json", ".git/", ".hg/"],
				"initializationOptions": {
					"cache": {
						"directory": "/tmp/ccls"
					}
				}
			}
1ccd23712fdfa85e0af5222c04cba18a|file:///home/ws/.config/nvim/coc-settings.json|206|1|v|json
	  "clangd": {
	    "command": "clangd",
	    "rootPatterns": ["compile_flags.txt", "compile_commands.json"],
	    "filetypes": ["c", "cc", "cpp", "c++", "objc", "objcpp"]
	v  }
f13d5d8bd118712f76412dcb6ef1390d|file:///home/ws/.config/nvim/init.vim|1|1|v|vim
	" __  ____   __  _   ___     _____ __  __ ____   ____
10fb881a8c112090dfae3386038103ea|file:///home/ws/.config/nvim/init.vim|78|1|v|vim
		\ 'coc-diagnostic',
3eb297d12d7b18cbbfbb73d2d245cbfd|file:///home/ws/.config/nvim/coc-settings.json|206|1|v|json
			"ccls": {
				"command": "ccls",
				"filetypes": ["c", "cc", "cpp", "c++", "objc", "objcpp"],
				"rootPatterns": [".ccls", "compile_commands.json", ".git/", ".hg/"],
				"initializationOptions": {
					"cache": {
						"directory": "/tmp/ccls"
					}
				}
		
099fb995346f31c749f6e40db0f395e3|file:///home/ws/hello.cpp|1|11|v|cpp
	header
2cd38b4439f79a57d7e7863e2f4bee5a|file:///home/ws/.config/nvim/init.vim|59|28|V|vim
	 Plug 'preservim/nerdtree'dd
066530e1557808b459d77bb03749f2a0|file:///home/ws/.config/nvim/init.vim|10|1|V|vim
	let &t_ut=''
d44f3b85e3862aee63ed3900f26abb53|file:///home/ws/.config/nvim/init.vim|9|23|v|vim
	clipboard=unnamedplus
	let &t_ut=''
	set autochdir
	set ex
90b463bc623c55f38442e6fb316719b4|file:///home/ws/.config/nvim/init.vim|50|1|V|vim
	Plug 'SpringHan/Terslation.vim'
0119445c5d9059b8ca9cc4f7c018afb7|file:///home/ws/.config/nvim/init.vim|49|1|V|vim
	Plug 'denstiny/Terslation'
fb90df8793c277378e8cc7b09c695c0e|file:///home/ws/.config/ranger/rc.conf|3|1|V|conf
	set preview_images_method w3m
fe33580c5f7fd251a355a8f7e7762860|file:///home/ws/.config/ranger/rc.conf|1|1|V|conf
	set preview_images true
67a20b8f9eb0e15fb34bd974e4d9005b|file:///home/ws/.config/ranger/rc.conf|761|1|V|conf
	set preview_images true
	set preview_images_method w3m
778196cadcd67bec38dff4904d3e0d79|file:///home/ws/Document/2048.cpp|399|41|V|cpp
	https://blog.51cto.com/u_15273495/2916586
3c5150b88449fd31cfe5c9224529d015|file:///home/ws/Document/2048.cpp|398|26|V|cpp
	c++实现2048小游戏之美
388c033ba341efb8cf62bb88377a46eb|file:///home/ws/Document/2048.cpp|397|30|V|cpp
	©著作权归作者所有：来自51CTO博客作者嘿克不黑的原创作品，请联系作者获取转载授权，否则将追究法律责任
4e07b3e64a3c01f0ce5ebf04ced8beaa|file:///home/ws/Document/2048.cpp|396|20|V|cpp
	-----------------------------------
b4c2ba77b4704880606a580d9edff432|file:///home/ws/Document/2048.cpp|1|1|V|cpp
	#include <Windows.h>
	#include <conio.h>
	#include <process.h>
	#include <stdio.h>
	#include <stdlib.h>
	#include <string.h>
	#include <time.h>
	
	const int NUM = 4;
	int Board[NUM][NUM] = {0};
	
	void assingment(); //重开局赋初值
	void ShowGame();   //初始化显示界面
	void AddRand();    //随机初始数和随机位置
	void InitGame();   //初始化游戏
	void StartGame();  //开始游戏
	void MoveLeft();   //向左
	void MoveRight();  //向右
	void MoveUp();     //向上
	void MoveDown();   //向下
	int GetNUll();     //获取空位置
	void GameOver();   //判断周围位置是否相同
	int TotalSc();     //总分
	
	bool IsRand;    //是否生成随机数
	bool Isover;    //游戏是否结束
	int TotalScore; //总分
	int TotalKey;   //按的总次数
	
	int main(void) {
	  // InitGame();
	  StartGame();
	  // AddRand();
	
	  if (TotalScore < 1024) {
	    printf("\n\n太菜了！\n");
	  } else {
	    printf("\n\n牛逼！\n");
	  }
	  getchar();
	  return 0;
	}
	
	void StartGame() {
	  InitGame();
	  while (1) {
	    IsRand = 0;
	    char ch;
	    //接收一个按键消息
	    switch (ch = _getch()) {
	    case 'a':
	    case 'A':
	    case 75:
	      MoveLeft();
	      TotalKey++;
	      break;
	    case 'D':
	    case 'd':
	    case 77:
	      MoveRight();
	      TotalKey++;
	      break;
	    case 'w':
	    case 'W':
	    case 72:
	      MoveUp();
	      TotalKey++;
	      break;
	    case 'S':
	    case 's':
	    case 80:
	      MoveDown();
	      TotalKey++;
	      break;
	    default:
	      break;
	    }
	    if (IsRand) {
	      AddRand();
	      system("cls"); //清除屏幕
	      ShowGame();
	    }
	    if (GetNUll() == 0) {
	      GameOver();
	      if (!Isover) {
	        if (MessageBox(NULL, L"是否重来一局？回车重开", L"游戏结束",
	                       MB_YESNO) == IDYES) {
	          while (getchar() != '\n') {
	            continue;
	          }
	          system("cls");
	          StartGame();
	        } else {
	          return;
	        }
	      }
	    }
	  }
	}
	void InitGame() {
	  assingment();
	  IsRand = 1; //需要生成
	  Isover = 1; //没有结束
	  TotalKey = 0;
	  TotalScore = 0;
	  AddRand();
	  AddRand();
	  ShowGame();
	}
	void assingment() {
	  for (int i = 0; i < NUM; i++) {
	    for (int j = 0; j < NUM; j++) {
	      Board[i][j] = 0;
	    }
	  }
	}
	void AddRand() {
	  srand(time(nullptr));
	  while (1) {
	    int Row = rand() % NUM;
	    int Col = rand() % NUM;
	    int val = rand() % 2;
	    if (Board[Row][Col] == 0) {
	      switch (val) {
	      case 0:
	        Board[Row][Col] = 2;
	        break;
	      case 1:
	        Board[Row][Col] = 4;
	        break;
	      }
	      break;
	    } else {
	      continue;
	    }
	  }
	}
	void ShowGame() {
	  TotalScore = TotalSc();
	  printf("********************************************************************"
	         "\n\n");
	  printf("-----------游戏名称：2048-----------\n\n\n");
	  printf("----分数：%d------移动次数：%d------\n", TotalScore, TotalKey);
	  printf("┏━━━━━┳━━━━━┳━━━━━┳━━━━━┓\n");
	  for (int i = 0; i < NUM; i++) {
	    printf("┃");
	    for (int j = 0; j < NUM; j++) {
	      if (Board[i][j] == 0) {
	        printf("     ┃");
	      } else {
	        printf("%4d ┃", Board[i][j]);
	      }
	    }
	    if (i < NUM - 1) {
	      printf("\n┣━━━━━╋━━━━━╋━━━━━╋━━━━━┫\n");
	    } else {
	      printf("\n┗━━━━━┻━━━━━┻━━━━━┻━━━━━┛\n\n");
	    }
	  }
	  printf("----------------------操作方法--------------------------\n\n");
	  printf("上（↑,W,w）--下（↓,S,s）--左（←,A,a）--右（→,D,d）--\n\n\n");
	  printf("*********************************************************************"
	         "\n");
	}
	void MoveLeft() //左移
	{
	  for (int i = 0; i < NUM; i++) {
	    for (int j = 1, k = 0; j < NUM; j++) {
	      if (Board[i][j] != 0) {
	        // k项和j项的值相等
	        if (Board[i][k] == Board[i][j]) {
	          Board[i][k++] *= 2; //  <<左移运算符速率大于*号
	          Board[i][j] = 0;
	          IsRand = 1;
	        }
	        // k项为0
	        else if (Board[i][k] == 0) {
	          Board[i][k++] = Board[i][j];
	          Board[i][j] = 0;
	          IsRand = 1;
	        }
	        // k项不为0  j和k不相等
	        else {
	          Board[i][++k] = Board[i][j];
	          if (k != j) // k已经加1了
	          {
	            Board[i][j] = 0;
	            IsRand = 1;
	          }
	        }
	      }
	    }
	  }
	}
	void MoveRight() //右移
	{
	  for (int i = 0; i < NUM; i++) {
	    for (int j = NUM - 2, k = NUM - 1; j >= 0; j--) {
	      if (Board[i][j] != 0) {
	        // k项和j项的值相等
	        if (Board[i][k] == Board[i][j]) {
	          Board[i][k--] *= 2; //  <<左移运算符速率大于*号
	          Board[i][j] = 0;
	          IsRand = 1;
	        }
	        // k项为0
	        else if (Board[i][k] == 0) {
	          Board[i][k--] = Board[i][j];
	          Board[i][j] = 0;
	          IsRand = 1;
	        }
	        // k项不为0  j和k不相等
	        else {
	          Board[i][--k] = Board[i][j];
	          if (k != j) // k已经加1了
	          {
	            Board[i][j] = 0;
	            IsRand = 1;
	          }
	        }
	      }
	    }
	  }
	}
	void MoveUp() //上移
	{
	  for (int i = 0; i < NUM; i++) {
	    for (int j = 1, k = 0; j < NUM; j++) {
	      if (Board[j][i] != 0) {
	        // k项和j项的值相等
	        if (Board[k][i] == Board[j][i]) {
	          Board[k++][i] *= 2; //  <<左移运算符速率大于*号
	          Board[j][i] = 0;
	          IsRand = 1;
	        }
	        // k项为0
	        else if (Board[k][i] == 0) {
	          Board[k++][i] = Board[j][i];
	          Board[j][i] = 0;
	          IsRand = 1;
	        }
	        // k项不为0  j和k不相等
	        else {
	          Board[++k][i] = Board[j][i];
	          if (k != j) // k已经加1了
	          {
	            Board[j][i] = 0;
	            IsRand = 1;
	          }
	        }
	      }
	    }
	  }
	}
	void MoveDown() //下移
	{
	  for (int i = 0; i < NUM; i++) {
	    for (int j = NUM - 2, k = NUM - 1; j >= 0; j--) {
	      if (Board[j][i] != 0) {
	        // k项和j项的值相等
	        if (Board[k][i] == Board[j][i]) {
	          Board[k--][i] *= 2; //  <<左移运算符速率大于*号
	          Board[j][i] = 0;
	          IsRand = 1;
	        }
	        // k项为0
	        else if (Board[k][i] == 0) {
	          Board[k--][i] = Board[j][i];
	          Board[j][i] = 0;
	          IsRand = 1;
	        }
	        // k项不为0  j和k不相等
	        else {
	          Board[--k][i] = Board[j][i];
	          if (k != j) // k已经加1了
	          {
	            Board[j][i] = 0;
	            IsRand = 1;
	          }
	        }
	      }
	    }
	  }
	}
	int GetNUll() {
	  int sum = 0;
	  for (int i = 0; i < NUM; i++) {
	    for (int j = 0; j < NUM; j++) {
	      if (Board[i][j] == 0) {
	        sum++;
	      }
	    }
	  }
	  return sum;
	}
	void GameOver() {
	  for (int i = 0; i < NUM; i++) {
	    for (int j = 0; j < NUM - 1; j++) {
	      if (Board[i][j] == Board[i][j + 1] || Board[j][i] == Board[j + 1][i]) {
	        Isover = 1;
	        return;
	      }
	    }
	  }
	  Isover = 0;
	}
	
	int TotalSc() {
	  int sum = 0;
	  for (int i = 0; i < NUM; i++) {
	    for (int j = 0; j < NUM; j++) {
	      sum += Board[i][j];
	    }
	  }
	  return sum;
	}
97b0f341b670bf1511acace93a2c82b6|file:///home/ws/Document/CppCode/test.cpp|1|1|V|cpp
	#include <iostream>
	using namespace std;
	int main() {
	  cout << "HelloWorld!";
	  return 0;
	}
fe4e543ebeb4164202fe1556e2785185|file:///home/ws/Document/CppCode/test.cpp|1|1|V|cpp
	#include <iostream>
	using namespace std;
	int main() {
	  cout << "HelloWorld!!!";
	  return 0;
	}
fc0e7cedb4fc7272646a019850f6f39c|file:///home/ws/Document/CppCode/test.cpp|4|1|V|cpp
		class person{
0359112bc40341fd6c301316871f72a5|file:///home/ws/.zshrc|11|1|V|zsh
	ZSH_THEME="a"
f86d00da6ee56aab90ad0bbf0a4f3f4c|file:///home/ws/Document/CppCode/t1.cpp|1|1|V|cpp
	extern const int ext = 12;
e3c690ee8361c69b8922c48b8fd24a2a|file:///home/ws/Document/CppCode/t1.cpp|4|32|V|cpp
	int main() { cout << (ext + 10); };
db2c955ecd9e0d7379c7a85f2fe59d9d|file:///home/ws/Document/CppCode/t1.cpp|3|15|V|cpp
	extern int ext;
c26ba559a5f34d46a49fafed87946fb7|file:///home/ws/Document/CppCode/t1.cpp|7|11|V|cpp
	  return 0;
1c48c28025d5ce6f4e9ef848186dd814|file:///home/ws/Document/CppCode/t1.cpp|1|1|V|cpp
	#include <iostream>
	using namespace std;
	
	extern int i = 19;
	int main() { cout << i; }
bdee703c89c64c546a69ae2d4a9671da|file:///home/ws/Document/CppCode/t2.cpp|1|1|V|cpp
	#include <iostream>
def9a2b839ab063168a4317f6ed62b26|file:///home/ws/Document/CppCode/t2.cpp|1|1|V|cpp
	extern const int ext;
	int main() { std::cout << ext << std::endl; }
3881336390724ab8e7076784050bd160|file:///home/ws/Document/CppCode/t1.cpp|1|19|V|cpp
	#include <./t2.cpp>
6ca035f5964895446642e24fd0e82550|file:///home/ws/Document/CppCode/practise/day_1/print.cpp|8|8|v|cpp
	init-statement
a0ef6b45ac014e02c1029bfe3120a27e|file:///home/ws/Document/CppCode/practise/day_1/print.cpp|8|1|V|cpp
			for (j = 1; j <= 30; j++)
				cout << "";
c14fbbff212c38d7f5687dc2a01e9c1e|file:///home/ws/Document/CppCode/practise/day_1/print.cpp|18|8|v|cpp
	init-statement; condition; inc-expression) {
		 statements
	
2cc3625bbf71253394dee00c83092d8a|file:///home/ws/Document/CppCode/practise/day_1/print.cpp|14|1|V|cpp
			for (f = 1; f <= 2 * i; f++)
				cout << "*";
8b0633d65e471c8653fad7075615b11b|file:///home/ws/Document/CppCode/practise/day_1/print.cpp|23|3|V|cpp
				cout << "*";
83e7cf3aed5a7e876488beb1a8839ba8|file:///home/ws/Document/CppCode/practise/day_1/print.cpp|26|5|V|cpp
		cout << endl;
3f9178c25b78ed8bed19091bcb62e266|file:///home/ws/Document/CppCode/practise/day_1/runnian.cpp|12|6|v|cpp
	condition
f52ceeba305a64ab1e3b59fcd77fbf53|file:///home/ws/Document/CppCode/practise/day_1/runnian.cpp|15|2|v|cpp
	statements
7410a2ae21c4fabd06c8852e5abba0c6|file:///home/ws/Document/CppCode/static.cpp|11|1|V|cpp
		cout << "i:" << i << "b:" << b << "c:" << c << endl;
9c44d83e22361359db88f14e9ffef6c0|file:///home/ws/Document/CppCode/static.cpp|13|1|V|cpp
		other();
eedc2606688d6794ef82f436ab61802b|file:///home/ws/Document/CppCode/static.cpp|22|8|v|cpp
	typename
29b2e77b63d567a1d4a5e97db74eae52|file:///home/ws/Document/CppCode/static.cpp|2|18|V|cpp
	#include <type_traits>
6e24ff7d99aaff71742faa7df4f571db|file:///home/ws/Document/CppCode/static.cpp|12|1|V|cpp
		cout << "i:" << i << "a:" << a << "b:" << b << "c:" << c << endl;
d16fe7eaacabefc1ac1b3ffedb2479e9|file:///home/ws/Document/CppCode/static.cpp|39|3|V|cpp
		ddcout << "i:" << i << "b:" << b << "c:" << c << endl;
60d3c091dbec94d6e6fa43083863d0bb|file:///home/ws/Document/CppCode/static.cpp|39|15|V|cpp
	  cout << "i:" << i << "b:" << b << "c:" << c << endl;
2758e9ad047cd1514c3fd9c73112f021|file:///home/ws/Document/CppCode/static.cpp|19|1|V|cpp
	  cout << "i:" << i << "a:" << a << "b:" << b << "c:" << c << endl;
c9cb06cfa405308e5f910550a91ef366|file:///home/ws/Document/CppCode/practise/test.cpp|14|1|V|cpp
	  cout << a << endl;
65f9c088d32affad4881ab7e3705b9a3|file:///home/ws/Document/CppCode/practise/test.cpp|1|1|V|cpp
	#include <iostream>
	using namespace std;
	void temp(int *a, int *b) {
	  int i = *a;
	  *a = *b;
	  *b = i;
	}
	
	int main() {
	  int a = 10;
	  int b = 20;
	  temp(&a, &b);
	
	  cout << "a: " << a << endl;
	  cout << "b: " << b << endl;
	
	  return 0;
	}
17af1076a0d8bd4087e204d4a30f29eb|file:///home/ws/Document/CppCode/practise/test.cpp|11|1|V|cpp
	  cout << i << endl;
77292ea3b83e6dd9466a527810302d0e|file:///home/ws/Document/CppCode/practise/person.cpp|2|2|V|cpp
	#include <string>
a13d14ee6a09135c69c45c889972355a|file:///home/ws/Document/CppCode/practise/person.cpp|27|11|v|cpp
	int age
c1f3d28f1b044c871e6eff2e9fc3c667|file:///home/ws/Document/CppCode/practise/person.cpp|28|12|v|cpp
	string name
df7e5eacd457a55827986ce9de53fa15|file:///home/ws/Document/CppCode/practise/person.cpp|30|1|V|cpp
		cout << p.getAge() << endl;
776b609b366aa8beb3b5f2674f8776c8|file:///home/ws/Document/CppCode/practise/person.cpp|12|2|V|cpp
	  string getName() { return name; }
ee1d6d68dc9dcf91f0ca47c7c5018385|file:///home/ws/Document/CppCode/practise/person.cpp|11|1|V|cpp
	  void setName(string name) { name = name; }
529d37b75620c953241fde8439ab6564|file:///home/ws/Document/CppCode/practise/person.cpp|7|1|V|cpp
	  string name;
a9cf9d83cea3490a477af4864ecf87b9|file:///home/ws/Document/CppCode/practise/person.cpp|18|1|V|cpp
	  p.setName("wangshuai");
add7adc8518ad74b29351afd48ad17d9|file:///home/ws/Document/CppCode/practise/person.cpp|20|1|V|cpp
	  cout << p.getName() << endl;
681d3002bf776381c76cd36e367b5a11|file:///home/ws/Document/CppCode/practise/person.cpp|11|1|V|cpp
	  void setAge(int age) { age = age; }
	  int getAge() { return age; }
f60be50875ede180e993ae30bf30e846|file:///home/ws/Document/CppCode/practise/test.cpp|1|1|V|cpp
	using namespace std;
f2084fc56796c69813b95e2df7bbd96f|file:///home/ws/Document/CppCode/practise/test.cpp|1|1|V|cpp
	int &test1() {
08015b787397d045490c0835a4ec3da0|file:///home/ws/Document/CppCode/practise/test.cpp|1|1|V|cpp
	  static int a = 10;
	  return a;
	}
	
	int main() {
	  int &i = test1();
	  cout << i << endl;
	  cout << i << endl;
	  cout << i << endl;
	  return 0;
	}
3f16114732fd15b07b2144813dec737e|file:///home/ws/.config/nvim/init.vim|178|39|V|vim
	nmap <silent> gd <Plug>(coc-definition)
fc3e595e7a33b30a3b66de8c9e86723f|file:///home/ws/.config/nvim/init.vim|178|39|V|vim
	nmap <silent> gy <Plug>(coc-type-definition)
06eec854c97cae94a476a1bd3cff8213|file:///home/ws/.config/nvim/init.vim|178|1|v|vim
	nmap <silent> gd <Plug>(coc-definition)
	nmap <silent> gy <Plug>(coc-type-definition)
	nmap <silent> gi <Plug>(coc-implementation)
	nmap <silent> gr <Plug>(coc-references)
	
	" Remap <C-f> and <C-b> to scroll float windows/popups
	if has('nvim-0.4.0') || has('patch-8.2.0750')
	  nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
	  nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"
	  inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(1)\<cr>" : "\<Right>"
	  inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(0)\<cr>" : "\<Left>"
	  vnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
	  vnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"
	e
0b791bc8296f8f5fab145ef98a1e0931|file:///home/ws/.config/nvim/init.vim|167|1|v|vim
	inoremap <silent><expr> <TAB>
	      \ coc#pum#visible() ? coc#pum#next(1) :
	      \ CheckBackspace() ? "\<Tab>" :
	      \ coc#refresh()
	inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"
	
	" Make <CR> to accept selected completion item or notify coc.nvim to format
	" <C-g>u breaks current undo, please make your own choice
	inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()
	                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"
	
	ndilld
bb6948141d73f55f04439c19b5b193af|file:///home/ws/.config/nvim/init.vim|167|1|v|vim
	inoremap <silent><expr> <TAB>
	      \ coc#pum#visible() ? coc#pum#next(1) :
	      \ CheckBackspace() ? "\<Tab>" :
	      \ coc#refresh()
	inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"
	
	" Make <CR> to accept selected completion item or notify coc.nvim to format
	" <C-g>u breaks current undo, please make your own choice
	inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()
	                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"
	
	nmap <silent> gd <Plug>(coc-definition)
	nmap <silent> gy <Plug>(coc-type-definition)
	nmap <silent> gi <Plug>(coc-implementation)
	nmap <silent> gr <Plug>(coc-references)
	
	" Remap <C-f> and <C-b> to scroll float windows/popups
	if has('nvim-0.4.0') || has('patch-8.2.0750')
	  nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
	  nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"
	  inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(1)\<cr>" : "\<Right>"
	  inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(0)\<cr>" : "\<Left>"
	  vnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
	  vnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"
	e
3c289517935b29b7befcebd1e4ea2543|file:///home/ws/.config/nvim/init.vim|167|4|V|vim
	ndif
1fe355887199ccff9ec629a4ca212431|file:///home/ws/.config/nvim/init.vim|52|1|v|vim
	Plug 'theniceboy/nvim-deus'
8bd24bc660fa772ec013ec81c1e26479|file:///home/ws/.config/nvim/init.vim|1|1|v|vim
	lua require("core.options")
a4dd3f9f3fb5977513c6b9f00d07f7be|file:///home/ws/Document/Cluster/hmi_gauge_skins/control/popup/popupControl.cpp|8|8|V|cpp
	#include
